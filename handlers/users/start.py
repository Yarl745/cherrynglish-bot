import asyncio
import logging
import re

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.deep_linking import decode_payload

import keyboards
from filters import IsUser
from loader import dp, db
from utils.db_api import redis_commands


@dp.message_handler(CommandStart(deep_link=re.compile(r"\w+"), encoded=True))
async def ask_to_connect(msg: Message):
    user = msg.from_user
    friend_id = int(decode_payload(msg.get_args()))

    if not (await redis_commands.is_user(user.id)):
        await bot_start(msg)

    if user.id == friend_id:
        return
    elif not (await redis_commands.is_user(friend_id)):
        await msg.answer("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...", reply_markup=keyboards.default.bot_menu)
        await msg.answer_sticker("CAACAgIAAxkBAAIDXGBRMulMsWISnPXOc16gVBC-09MmAAIYAAPANk8T1vonv5xqGPgeBA")
        return
    elif await db.is_users_connected(user.id, friend_id):
        await msg.answer("–¢—ã —É–∂–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω –∑–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...", reply_markup=keyboards.default.bot_menu)
        await msg.answer_sticker("CAACAgIAAxkBAAIEu2BTYZvJKYkVXcleRsmhI8V4q4A9AAINAAPANk8TpPnh9NR4jVMeBA")
        return

    friend = (await msg.bot.get_chat_member(friend_id, friend_id)).user

    await msg.answer(
        "–•–æ—á–µ—à—å –∑–∞—Ü–µ–ø–∏—Ç—Å—è –∑–∞ @{}?".format(friend.username),
        reply_markup=keyboards.inline.get_connect_user_menu(friend_id)
    )

    logging.info(f"Ask @{user.username}-{user.id} to connect by connection_link to @{friend.username}-{friend_id}")


@dp.message_handler(CommandStart(), IsUser())
async def bot_start_by_user(msg: types.Message):
    user = msg.from_user

    await msg.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {user.full_name}, —á–µ—Ä–µ—à–µ–Ω–∫–∞ —Ç–µ–±—è –ø–æ–º–Ω–∏—Ç!",
        reply_markup=keyboards.default.bot_menu
    )
    await msg.answer_sticker("CAACAgIAAxkBAAM_YE3OhegbsRHfhEIpsDR-_7h-psIAAg0AA8A2TxOk-eH01HiNUx4E")

    logging.info(f"@{user.username}-{user.id}(already user) start bot")


@dp.message_handler(CommandStart())
async def bot_start(msg: types.Message):
    user = msg.from_user

    await db.add_user(
        id=user.id,
        username=user.username,
        full_name=user.full_name
    )
    await redis_commands.set_new_user(user_id=user.id)

    await msg.answer(f"–ü—Ä–∏–≤–µ—Ç, {user.full_name}!")
    await msg.answer(f"–Ø —á–µ—Ä–µ—à–µ–Ω–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –∏–∑—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞.")
    await msg.answer_sticker("CAACAgIAAxkBAAMDYEy1-FTmlee0a0sLpyxSk-M1LuwAAg0AA8A2TxOk-eH01HiNUx4E")

    await asyncio.sleep(4)

    wordbit_link = "https://play.google.com/store/apps/details?id=net.wordbit.enru"
    await msg.answer(
        f"–ò–∑–Ω–æ—á–∞–ª—å–Ω–æ –≤–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ <a href='{wordbit_link}'>WordBit</a> –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é. "
        f"–ï—Å–ª–∏ —Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏ Apple, —Ç–æ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–≤. "
        f"–ì–ª–∞–≤–Ω–æ–µ —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–æ–¥ –∏ —Å–∞–º–æ —Å–ª–æ–≤–æ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –Ω–∞ –æ–¥–Ω–æ–º —ç–∫—Ä–∞–Ω–µ!\n\n"
        f"–ö–∞—á–∞–π WordBit ‚Äî> –¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω—ã —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–Ω–∞–µ—à—å ‚Äî> –∑–∞–ª–∏–≤–∞–π –ø–∞—á–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤ –±–æ—Ç–∞ "
        f"‚Äî> —É—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–ª–æ–≤ üòâ",
        disable_web_page_preview=True
    )
    await msg.answer_sticker("CAACAgIAAxkBAAMFYEy83a4vWMnl1iaN1Gi07fd6fugAAh0AA8A2TxNe2KbcQT3eSB4E")

    await asyncio.sleep(7)

    await msg.answer(
        "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω –±—É–¥–µ—Ç:\n"
        "1) –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —É–¥–æ–±–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –∏–∑—É—á–µ–Ω–∏—è —Å–ª–æ–≤;\n"
        "2) –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –Ω–∞–±–æ—Ä, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã "
        "—Ç—ã –Ω–µ –∑–∞–±—ã–≤–∞–ª(-–∞) –≤—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞;\n"
        "3) –ø–æ–∑–≤–æ–ª—è—Ç—å –¥–æ–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∫ —Å–ª–æ–≤–∞–º;\n"
        "4) –¥–∞–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞–±–æ—Ä–∞–º–∏ c –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –±–æ—Ç–∞ –∏ "
        "–≤–µ—Å–µ–ª–æ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∫ —Å–ª–æ–≤–∞–º –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏."
    )
    await msg.answer_sticker("CAACAgIAAxkBAAMHYEy-1ZR0YqSU-36ANwmSftFGAmkAAgYAA8A2TxPHyqL0sm5wdh4E")

    await asyncio.sleep(7)

    await msg.answer(
        "–ò –ø–æ–º–Ω–∏, —á—Ç–æ —á–µ–º –≥–ª—É–ø–µ–µ –∏ –ø–æ—Å—Ç—ã–¥–Ω–µ–µ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –∫ —Å–ª–æ–≤—É ‚Äî —Ç–µ–º –æ–Ω–∞ –ª—É—á—à–µ!",
        reply_markup=keyboards.default.bot_menu
    )
    await msg.answer_sticker("CAACAgIAAxkBAAIJeWBWMPFTB6J-aY0eU2oWK_NVJ5B2AAIIAAPANk8Tb2wmC94am2keBA")

    logging.info(f"@{user.username}-{user.id} start bot")



